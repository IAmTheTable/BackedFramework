### YamlMime:ManagedReference
items:
- uid: BackedFramework.Resources.HTTP.RequestContext
  commentId: T:BackedFramework.Resources.HTTP.RequestContext
  id: RequestContext
  parent: BackedFramework.Resources.HTTP
  children:
  - BackedFramework.Resources.HTTP.RequestContext.Dispose
  - BackedFramework.Resources.HTTP.RequestContext.FormData
  - BackedFramework.Resources.HTTP.RequestContext.IsQueried
  - BackedFramework.Resources.HTTP.RequestContext.Method
  - BackedFramework.Resources.HTTP.RequestContext.Path
  - BackedFramework.Resources.HTTP.RequestContext.QueryParameters
  - BackedFramework.Resources.HTTP.RequestContext.RequestHeaders
  langs:
  - csharp
  - vb
  name: RequestContext
  nameWithType: RequestContext
  fullName: BackedFramework.Resources.HTTP.RequestContext
  type: Class
  source:
    remote:
      path: BackedFramework/Resources/HTTP/RequestContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: RequestContext
    path: ../BackedFramework/Resources/HTTP/RequestContext.cs
    startLine: 12
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nA class that helps with reading and writing HTTP requests.\n"
  example: []
  syntax:
    content: 'public class RequestContext : IDisposable'
    content.vb: >-
      Public Class RequestContext
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BackedFramework.Resources.HTTP.RequestContext.IsQueried
  commentId: P:BackedFramework.Resources.HTTP.RequestContext.IsQueried
  id: IsQueried
  parent: BackedFramework.Resources.HTTP.RequestContext
  langs:
  - csharp
  - vb
  name: IsQueried
  nameWithType: RequestContext.IsQueried
  fullName: BackedFramework.Resources.HTTP.RequestContext.IsQueried
  type: Property
  source:
    remote:
      path: BackedFramework/Resources/HTTP/RequestContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: IsQueried
    path: ../BackedFramework/Resources/HTTP/RequestContext.cs
    startLine: 22
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nIf the request contains url parameters, this will return true, if not false.\n"
  example: []
  syntax:
    content: public bool IsQueried { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsQueried As Boolean
  overload: BackedFramework.Resources.HTTP.RequestContext.IsQueried*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BackedFramework.Resources.HTTP.RequestContext.QueryParameters
  commentId: P:BackedFramework.Resources.HTTP.RequestContext.QueryParameters
  id: QueryParameters
  parent: BackedFramework.Resources.HTTP.RequestContext
  langs:
  - csharp
  - vb
  name: QueryParameters
  nameWithType: RequestContext.QueryParameters
  fullName: BackedFramework.Resources.HTTP.RequestContext.QueryParameters
  type: Property
  source:
    remote:
      path: BackedFramework/Resources/HTTP/RequestContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: QueryParameters
    path: ../BackedFramework/Resources/HTTP/RequestContext.cs
    startLine: 33
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nThe query parameters in the request.\n"
  example: []
  syntax:
    content: public Dictionary<string, string> QueryParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public ReadOnly Property QueryParameters As Dictionary(Of String, String)
  overload: BackedFramework.Resources.HTTP.RequestContext.QueryParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BackedFramework.Resources.HTTP.RequestContext.Path
  commentId: P:BackedFramework.Resources.HTTP.RequestContext.Path
  id: Path
  parent: BackedFramework.Resources.HTTP.RequestContext
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: RequestContext.Path
  fullName: BackedFramework.Resources.HTTP.RequestContext.Path
  type: Property
  source:
    remote:
      path: BackedFramework/Resources/HTTP/RequestContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: Path
    path: ../BackedFramework/Resources/HTTP/RequestContext.cs
    startLine: 44
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nPath of the request, excluding the FQDN, &quot;/static/404.html&quot; for exmaple.\n"
  example: []
  syntax:
    content: public string Path { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Path As String
  overload: BackedFramework.Resources.HTTP.RequestContext.Path*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BackedFramework.Resources.HTTP.RequestContext.Method
  commentId: P:BackedFramework.Resources.HTTP.RequestContext.Method
  id: Method
  parent: BackedFramework.Resources.HTTP.RequestContext
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: RequestContext.Method
  fullName: BackedFramework.Resources.HTTP.RequestContext.Method
  type: Property
  source:
    remote:
      path: BackedFramework/Resources/HTTP/RequestContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: Method
    path: ../BackedFramework/Resources/HTTP/RequestContext.cs
    startLine: 55
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nThe HTTP method used for the request.\n"
  example: []
  syntax:
    content: public HTTPMethods Method { get; }
    parameters: []
    return:
      type: BackedFramework.Resources.HTTP.HTTPMethods
    content.vb: Public ReadOnly Property Method As HTTPMethods
  overload: BackedFramework.Resources.HTTP.RequestContext.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BackedFramework.Resources.HTTP.RequestContext.FormData
  commentId: P:BackedFramework.Resources.HTTP.RequestContext.FormData
  id: FormData
  parent: BackedFramework.Resources.HTTP.RequestContext
  langs:
  - csharp
  - vb
  name: FormData
  nameWithType: RequestContext.FormData
  fullName: BackedFramework.Resources.HTTP.RequestContext.FormData
  type: Property
  source:
    remote:
      path: BackedFramework/Resources/HTTP/RequestContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: FormData
    path: ../BackedFramework/Resources/HTTP/RequestContext.cs
    startLine: 63
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  syntax:
    content: public Dictionary<string, string> FormData { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public ReadOnly Property FormData As Dictionary(Of String, String)
  overload: BackedFramework.Resources.HTTP.RequestContext.FormData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BackedFramework.Resources.HTTP.RequestContext.RequestHeaders
  commentId: P:BackedFramework.Resources.HTTP.RequestContext.RequestHeaders
  id: RequestHeaders
  parent: BackedFramework.Resources.HTTP.RequestContext
  langs:
  - csharp
  - vb
  name: RequestHeaders
  nameWithType: RequestContext.RequestHeaders
  fullName: BackedFramework.Resources.HTTP.RequestContext.RequestHeaders
  type: Property
  source:
    remote:
      path: BackedFramework/Resources/HTTP/RequestContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: RequestHeaders
    path: ../BackedFramework/Resources/HTTP/RequestContext.cs
    startLine: 74
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nAll headers sent from the client in the request.\n"
  example: []
  syntax:
    content: public Dictionary<string, string> RequestHeaders { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public ReadOnly Property RequestHeaders As Dictionary(Of String, String)
  overload: BackedFramework.Resources.HTTP.RequestContext.RequestHeaders*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BackedFramework.Resources.HTTP.RequestContext.Dispose
  commentId: M:BackedFramework.Resources.HTTP.RequestContext.Dispose
  id: Dispose
  parent: BackedFramework.Resources.HTTP.RequestContext
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: RequestContext.Dispose()
  fullName: BackedFramework.Resources.HTTP.RequestContext.Dispose()
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/RequestContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: Dispose
    path: ../BackedFramework/Resources/HTTP/RequestContext.cs
    startLine: 82
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: BackedFramework.Resources.HTTP.RequestContext.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BackedFramework.Resources.HTTP
  commentId: N:BackedFramework.Resources.HTTP
  name: BackedFramework.Resources.HTTP
  nameWithType: BackedFramework.Resources.HTTP
  fullName: BackedFramework.Resources.HTTP
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BackedFramework.Resources.HTTP.RequestContext.IsQueried*
  commentId: Overload:BackedFramework.Resources.HTTP.RequestContext.IsQueried
  name: IsQueried
  nameWithType: RequestContext.IsQueried
  fullName: BackedFramework.Resources.HTTP.RequestContext.IsQueried
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BackedFramework.Resources.HTTP.RequestContext.QueryParameters*
  commentId: Overload:BackedFramework.Resources.HTTP.RequestContext.QueryParameters
  name: QueryParameters
  nameWithType: RequestContext.QueryParameters
  fullName: BackedFramework.Resources.HTTP.RequestContext.QueryParameters
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BackedFramework.Resources.HTTP.RequestContext.Path*
  commentId: Overload:BackedFramework.Resources.HTTP.RequestContext.Path
  name: Path
  nameWithType: RequestContext.Path
  fullName: BackedFramework.Resources.HTTP.RequestContext.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BackedFramework.Resources.HTTP.RequestContext.Method*
  commentId: Overload:BackedFramework.Resources.HTTP.RequestContext.Method
  name: Method
  nameWithType: RequestContext.Method
  fullName: BackedFramework.Resources.HTTP.RequestContext.Method
- uid: BackedFramework.Resources.HTTP.HTTPMethods
  commentId: T:BackedFramework.Resources.HTTP.HTTPMethods
  parent: BackedFramework.Resources.HTTP
  name: HTTPMethods
  nameWithType: HTTPMethods
  fullName: BackedFramework.Resources.HTTP.HTTPMethods
- uid: BackedFramework.Resources.HTTP.RequestContext.FormData*
  commentId: Overload:BackedFramework.Resources.HTTP.RequestContext.FormData
  name: FormData
  nameWithType: RequestContext.FormData
  fullName: BackedFramework.Resources.HTTP.RequestContext.FormData
- uid: BackedFramework.Resources.HTTP.RequestContext.RequestHeaders*
  commentId: Overload:BackedFramework.Resources.HTTP.RequestContext.RequestHeaders
  name: RequestHeaders
  nameWithType: RequestContext.RequestHeaders
  fullName: BackedFramework.Resources.HTTP.RequestContext.RequestHeaders
- uid: BackedFramework.Resources.HTTP.RequestContext.Dispose*
  commentId: Overload:BackedFramework.Resources.HTTP.RequestContext.Dispose
  name: Dispose
  nameWithType: RequestContext.Dispose
  fullName: BackedFramework.Resources.HTTP.RequestContext.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
