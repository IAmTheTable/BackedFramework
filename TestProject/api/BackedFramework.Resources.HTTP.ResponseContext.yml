### YamlMime:ManagedReference
items:
- uid: BackedFramework.Resources.HTTP.ResponseContext
  commentId: T:BackedFramework.Resources.HTTP.ResponseContext
  id: ResponseContext
  parent: BackedFramework.Resources.HTTP
  children:
  - BackedFramework.Resources.HTTP.ResponseContext.AddHeader(System.String,System.String)
  - BackedFramework.Resources.HTTP.ResponseContext.Append(System.Object)
  - BackedFramework.Resources.HTTP.ResponseContext.Clear
  - BackedFramework.Resources.HTTP.ResponseContext.Dispose
  - BackedFramework.Resources.HTTP.ResponseContext.FinishRequest
  - BackedFramework.Resources.HTTP.ResponseContext.OnRequestFinished
  - BackedFramework.Resources.HTTP.ResponseContext.Redirect(System.String,HttpStatusCode)
  - BackedFramework.Resources.HTTP.ResponseContext.SendFile(System.Boolean,System.String)
  - BackedFramework.Resources.HTTP.ResponseContext.SendNotFound
  - BackedFramework.Resources.HTTP.ResponseContext.SendRawFile(System.Boolean,System.String)
  - BackedFramework.Resources.HTTP.ResponseContext.SetCookie(System.String,System.String,System.Boolean,System.Boolean,System.Nullable{DateTime})
  - BackedFramework.Resources.HTTP.ResponseContext.Write(System.Object)
  langs:
  - csharp
  - vb
  name: ResponseContext
  nameWithType: ResponseContext
  fullName: BackedFramework.Resources.HTTP.ResponseContext
  type: Class
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: ResponseContext
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 9
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nA class that represents an HTTP response, but also provides simple yet helpful methods and properties to help build your response easier.\n"
  example: []
  syntax:
    content: 'public class ResponseContext : ResponseBase'
    content.vb: >-
      Public Class ResponseContext
          Inherits ResponseBase
  inheritance:
  - System.Object
  - BackedFramework.Resources.HTTP.ResponseBase
  implements:
  - IDisposable
  inheritedMembers:
  - BackedFramework.Resources.HTTP.ResponseBase.StatusCode
  - BackedFramework.Resources.HTTP.ResponseBase.Content
  - BackedFramework.Resources.HTTP.ResponseBase.Headers
  - BackedFramework.Resources.HTTP.ResponseBase.ToStream
  - BackedFramework.Resources.HTTP.ResponseBase.ToBytes
  - BackedFramework.Resources.HTTP.ResponseBase.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BackedFramework.Resources.HTTP.ResponseContext.OnRequestFinished
  commentId: E:BackedFramework.Resources.HTTP.ResponseContext.OnRequestFinished
  id: OnRequestFinished
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: OnRequestFinished
  nameWithType: ResponseContext.OnRequestFinished
  fullName: BackedFramework.Resources.HTTP.ResponseContext.OnRequestFinished
  type: Event
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: OnRequestFinished
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 11
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  syntax:
    content: public static event Action OnRequestFinished
    return:
      type: Action
    content.vb: Public Shared Event OnRequestFinished As Action
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BackedFramework.Resources.HTTP.ResponseContext.Redirect(System.String,HttpStatusCode)
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.Redirect(System.String,HttpStatusCode)
  id: Redirect(System.String,HttpStatusCode)
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: Redirect(String, HttpStatusCode)
  nameWithType: ResponseContext.Redirect(String, HttpStatusCode)
  fullName: BackedFramework.Resources.HTTP.ResponseContext.Redirect(System.String, HttpStatusCode)
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: Redirect
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 49
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nSend a 3XX redirect type request to the client.\n"
  remarks: 'Ex: https://youtube.com'
  example: []
  syntax:
    content: public void Redirect(string location, HttpStatusCode code = null)
    parameters:
    - id: location
      type: System.String
      description: The url the client will redirect to.
    - id: code
      type: HttpStatusCode
    content.vb: Public Sub Redirect(location As String, code As HttpStatusCode = Nothing)
  overload: BackedFramework.Resources.HTTP.ResponseContext.Redirect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BackedFramework.Resources.HTTP.ResponseContext.Write(System.Object)
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.Write(System.Object)
  id: Write(System.Object)
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: Write(Object)
  nameWithType: ResponseContext.Write(Object)
  fullName: BackedFramework.Resources.HTTP.ResponseContext.Write(System.Object)
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: Write
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 69
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nWrite data to the client.\n"
  example: []
  syntax:
    content: public void Write(object Text)
    parameters:
    - id: Text
      type: System.Object
      description: The text to write. Can be any object as long as it converts to a string how YOU want.
    content.vb: Public Sub Write(Text As Object)
  overload: BackedFramework.Resources.HTTP.ResponseContext.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BackedFramework.Resources.HTTP.ResponseContext.Append(System.Object)
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.Append(System.Object)
  id: Append(System.Object)
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: Append(Object)
  nameWithType: ResponseContext.Append(Object)
  fullName: BackedFramework.Resources.HTTP.ResponseContext.Append(System.Object)
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: Append
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 75
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nAppend text content to the response.\n"
  example: []
  syntax:
    content: public void Append(object Text)
    parameters:
    - id: Text
      type: System.Object
      description: The text to append.
    content.vb: Public Sub Append(Text As Object)
  overload: BackedFramework.Resources.HTTP.ResponseContext.Append*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BackedFramework.Resources.HTTP.ResponseContext.Clear
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.Clear
  id: Clear
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ResponseContext.Clear()
  fullName: BackedFramework.Resources.HTTP.ResponseContext.Clear()
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: Clear
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 80
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nRemove all the data out of the content.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: BackedFramework.Resources.HTTP.ResponseContext.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BackedFramework.Resources.HTTP.ResponseContext.SendFile(System.Boolean,System.String)
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.SendFile(System.Boolean,System.String)
  id: SendFile(System.Boolean,System.String)
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: SendFile(Boolean, String)
  nameWithType: ResponseContext.SendFile(Boolean, String)
  fullName: BackedFramework.Resources.HTTP.ResponseContext.SendFile(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: SendFile
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 87
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nSend a file to the client, includes the HTTP header.\n"
  example: []
  syntax:
    content: public void SendFile(bool fromBaseDirectory, string path = "")
    parameters:
    - id: fromBaseDirectory
      type: System.Boolean
      description: Should the function look for the file in the defined root directory?
    - id: path
      type: System.String
      description: Location of the file.
    content.vb: Public Sub SendFile(fromBaseDirectory As Boolean, path As String = "")
  overload: BackedFramework.Resources.HTTP.ResponseContext.SendFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BackedFramework.Resources.HTTP.ResponseContext.SendRawFile(System.Boolean,System.String)
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.SendRawFile(System.Boolean,System.String)
  id: SendRawFile(System.Boolean,System.String)
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: SendRawFile(Boolean, String)
  nameWithType: ResponseContext.SendRawFile(Boolean, String)
  fullName: BackedFramework.Resources.HTTP.ResponseContext.SendRawFile(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: SendRawFile
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 113
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nSend a file to the client, only sends the raw file, no http header.\n"
  example: []
  syntax:
    content: public void SendRawFile(bool fromBaseDirectory, string path = "")
    parameters:
    - id: fromBaseDirectory
      type: System.Boolean
      description: Is the file location in the root directory, specified in the server config
    - id: path
      type: System.String
      description: The location of the file
    content.vb: Public Sub SendRawFile(fromBaseDirectory As Boolean, path As String = "")
  overload: BackedFramework.Resources.HTTP.ResponseContext.SendRawFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BackedFramework.Resources.HTTP.ResponseContext.SendNotFound
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.SendNotFound
  id: SendNotFound
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: SendNotFound()
  nameWithType: ResponseContext.SendNotFound()
  fullName: BackedFramework.Resources.HTTP.ResponseContext.SendNotFound()
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: SendNotFound
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 163
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nA pre-written function to help send a 404 response to the client.\n"
  example: []
  syntax:
    content: public void SendNotFound()
    content.vb: Public Sub SendNotFound
  overload: BackedFramework.Resources.HTTP.ResponseContext.SendNotFound*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BackedFramework.Resources.HTTP.ResponseContext.FinishRequest
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.FinishRequest
  id: FinishRequest
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: FinishRequest()
  nameWithType: ResponseContext.FinishRequest()
  fullName: BackedFramework.Resources.HTTP.ResponseContext.FinishRequest()
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: FinishRequest
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 187
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nWrite the response to the client.\n"
  example: []
  syntax:
    content: public void FinishRequest()
    content.vb: Public Sub FinishRequest
  overload: BackedFramework.Resources.HTTP.ResponseContext.FinishRequest*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BackedFramework.Resources.HTTP.ResponseContext.AddHeader(System.String,System.String)
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: AddHeader(String, String)
  nameWithType: ResponseContext.AddHeader(String, String)
  fullName: BackedFramework.Resources.HTTP.ResponseContext.AddHeader(System.String, System.String)
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: AddHeader
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 198
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nAdd a header to the client.\n"
  example: []
  syntax:
    content: public void AddHeader(string key, string value)
    parameters:
    - id: key
      type: System.String
      description: Name of the header.
    - id: value
      type: System.String
      description: Value of the header.
    content.vb: Public Sub AddHeader(key As String, value As String)
  overload: BackedFramework.Resources.HTTP.ResponseContext.AddHeader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BackedFramework.Resources.HTTP.ResponseContext.SetCookie(System.String,System.String,System.Boolean,System.Boolean,System.Nullable{DateTime})
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.SetCookie(System.String,System.String,System.Boolean,System.Boolean,System.Nullable{DateTime})
  id: SetCookie(System.String,System.String,System.Boolean,System.Boolean,System.Nullable{DateTime})
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: SetCookie(String, String, Boolean, Boolean, Nullable<DateTime>)
  nameWithType: ResponseContext.SetCookie(String, String, Boolean, Boolean, Nullable<DateTime>)
  fullName: BackedFramework.Resources.HTTP.ResponseContext.SetCookie(System.String, System.String, System.Boolean, System.Boolean, System.Nullable<DateTime>)
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: SetCookie
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 208
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  summary: "\nSend a Set-Cookie header to the client, which sets the cookie to its corresponding key=value pair.\n"
  example: []
  syntax:
    content: public void SetCookie(string name, string value, bool secure = false, bool httpOnly = false, DateTime? expires = null)
    parameters:
    - id: name
      type: System.String
      description: Name of the cookie
    - id: value
      type: System.String
      description: Value of the cookie
    - id: secure
      type: System.Boolean
      description: ''
    - id: httpOnly
      type: System.Boolean
      description: ''
    - id: expires
      type: System.Nullable{DateTime}
      description: ''
    content.vb: Public Sub SetCookie(name As String, value As String, secure As Boolean = False, httpOnly As Boolean = False, expires As DateTime? = Nothing)
  overload: BackedFramework.Resources.HTTP.ResponseContext.SetCookie*
  nameWithType.vb: ResponseContext.SetCookie(String, String, Boolean, Boolean, Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BackedFramework.Resources.HTTP.ResponseContext.SetCookie(System.String, System.String, System.Boolean, System.Boolean, System.Nullable(Of DateTime))
  name.vb: SetCookie(String, String, Boolean, Boolean, Nullable(Of DateTime))
- uid: BackedFramework.Resources.HTTP.ResponseContext.Dispose
  commentId: M:BackedFramework.Resources.HTTP.ResponseContext.Dispose
  id: Dispose
  parent: BackedFramework.Resources.HTTP.ResponseContext
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ResponseContext.Dispose()
  fullName: BackedFramework.Resources.HTTP.ResponseContext.Dispose()
  type: Method
  source:
    remote:
      path: BackedFramework/Resources/HTTP/ResponseContext.cs
      branch: master
      repo: https://github.com/IAmTheTable/BackedFramework.git
    id: Dispose
    path: ../BackedFramework/Resources/HTTP/ResponseContext.cs
    startLine: 220
  assemblies:
  - BackedFramework
  namespace: BackedFramework.Resources.HTTP
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: BackedFramework.Resources.HTTP.ResponseContext.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BackedFramework.Resources.HTTP
  commentId: N:BackedFramework.Resources.HTTP
  name: BackedFramework.Resources.HTTP
  nameWithType: BackedFramework.Resources.HTTP
  fullName: BackedFramework.Resources.HTTP
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BackedFramework.Resources.HTTP.ResponseBase
  commentId: T:BackedFramework.Resources.HTTP.ResponseBase
  parent: BackedFramework.Resources.HTTP
  name: ResponseBase
  nameWithType: ResponseBase
  fullName: BackedFramework.Resources.HTTP.ResponseBase
- uid: IDisposable
  commentId: '!:IDisposable'
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: BackedFramework.Resources.HTTP.ResponseBase.StatusCode
  commentId: P:BackedFramework.Resources.HTTP.ResponseBase.StatusCode
  parent: BackedFramework.Resources.HTTP.ResponseBase
  name: StatusCode
  nameWithType: ResponseBase.StatusCode
  fullName: BackedFramework.Resources.HTTP.ResponseBase.StatusCode
- uid: BackedFramework.Resources.HTTP.ResponseBase.Content
  commentId: P:BackedFramework.Resources.HTTP.ResponseBase.Content
  parent: BackedFramework.Resources.HTTP.ResponseBase
  name: Content
  nameWithType: ResponseBase.Content
  fullName: BackedFramework.Resources.HTTP.ResponseBase.Content
- uid: BackedFramework.Resources.HTTP.ResponseBase.Headers
  commentId: P:BackedFramework.Resources.HTTP.ResponseBase.Headers
  parent: BackedFramework.Resources.HTTP.ResponseBase
  name: Headers
  nameWithType: ResponseBase.Headers
  fullName: BackedFramework.Resources.HTTP.ResponseBase.Headers
- uid: BackedFramework.Resources.HTTP.ResponseBase.ToStream
  commentId: M:BackedFramework.Resources.HTTP.ResponseBase.ToStream
  parent: BackedFramework.Resources.HTTP.ResponseBase
  name: ToStream()
  nameWithType: ResponseBase.ToStream()
  fullName: BackedFramework.Resources.HTTP.ResponseBase.ToStream()
  spec.csharp:
  - uid: BackedFramework.Resources.HTTP.ResponseBase.ToStream
    name: ToStream
    nameWithType: ResponseBase.ToStream
    fullName: BackedFramework.Resources.HTTP.ResponseBase.ToStream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BackedFramework.Resources.HTTP.ResponseBase.ToStream
    name: ToStream
    nameWithType: ResponseBase.ToStream
    fullName: BackedFramework.Resources.HTTP.ResponseBase.ToStream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BackedFramework.Resources.HTTP.ResponseBase.ToBytes
  commentId: M:BackedFramework.Resources.HTTP.ResponseBase.ToBytes
  parent: BackedFramework.Resources.HTTP.ResponseBase
  name: ToBytes()
  nameWithType: ResponseBase.ToBytes()
  fullName: BackedFramework.Resources.HTTP.ResponseBase.ToBytes()
  spec.csharp:
  - uid: BackedFramework.Resources.HTTP.ResponseBase.ToBytes
    name: ToBytes
    nameWithType: ResponseBase.ToBytes
    fullName: BackedFramework.Resources.HTTP.ResponseBase.ToBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BackedFramework.Resources.HTTP.ResponseBase.ToBytes
    name: ToBytes
    nameWithType: ResponseBase.ToBytes
    fullName: BackedFramework.Resources.HTTP.ResponseBase.ToBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BackedFramework.Resources.HTTP.ResponseBase.ToString
  commentId: M:BackedFramework.Resources.HTTP.ResponseBase.ToString
  parent: BackedFramework.Resources.HTTP.ResponseBase
  name: ToString()
  nameWithType: ResponseBase.ToString()
  fullName: BackedFramework.Resources.HTTP.ResponseBase.ToString()
  spec.csharp:
  - uid: BackedFramework.Resources.HTTP.ResponseBase.ToString
    name: ToString
    nameWithType: ResponseBase.ToString
    fullName: BackedFramework.Resources.HTTP.ResponseBase.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BackedFramework.Resources.HTTP.ResponseBase.ToString
    name: ToString
    nameWithType: ResponseBase.ToString
    fullName: BackedFramework.Resources.HTTP.ResponseBase.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Action
  commentId: '!:Action'
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: BackedFramework.Resources.HTTP.ResponseContext.Redirect*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.Redirect
  name: Redirect
  nameWithType: ResponseContext.Redirect
  fullName: BackedFramework.Resources.HTTP.ResponseContext.Redirect
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: HttpStatusCode
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: HttpStatusCode
- uid: BackedFramework.Resources.HTTP.ResponseContext.Write*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.Write
  name: Write
  nameWithType: ResponseContext.Write
  fullName: BackedFramework.Resources.HTTP.ResponseContext.Write
- uid: BackedFramework.Resources.HTTP.ResponseContext.Append*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.Append
  name: Append
  nameWithType: ResponseContext.Append
  fullName: BackedFramework.Resources.HTTP.ResponseContext.Append
- uid: BackedFramework.Resources.HTTP.ResponseContext.Clear*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.Clear
  name: Clear
  nameWithType: ResponseContext.Clear
  fullName: BackedFramework.Resources.HTTP.ResponseContext.Clear
- uid: BackedFramework.Resources.HTTP.ResponseContext.SendFile*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.SendFile
  name: SendFile
  nameWithType: ResponseContext.SendFile
  fullName: BackedFramework.Resources.HTTP.ResponseContext.SendFile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BackedFramework.Resources.HTTP.ResponseContext.SendRawFile*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.SendRawFile
  name: SendRawFile
  nameWithType: ResponseContext.SendRawFile
  fullName: BackedFramework.Resources.HTTP.ResponseContext.SendRawFile
- uid: BackedFramework.Resources.HTTP.ResponseContext.SendNotFound*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.SendNotFound
  name: SendNotFound
  nameWithType: ResponseContext.SendNotFound
  fullName: BackedFramework.Resources.HTTP.ResponseContext.SendNotFound
- uid: BackedFramework.Resources.HTTP.ResponseContext.FinishRequest*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.FinishRequest
  name: FinishRequest
  nameWithType: ResponseContext.FinishRequest
  fullName: BackedFramework.Resources.HTTP.ResponseContext.FinishRequest
- uid: BackedFramework.Resources.HTTP.ResponseContext.AddHeader*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.AddHeader
  name: AddHeader
  nameWithType: ResponseContext.AddHeader
  fullName: BackedFramework.Resources.HTTP.ResponseContext.AddHeader
- uid: BackedFramework.Resources.HTTP.ResponseContext.SetCookie*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.SetCookie
  name: SetCookie
  nameWithType: ResponseContext.SetCookie
  fullName: BackedFramework.Resources.HTTP.ResponseContext.SetCookie
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BackedFramework.Resources.HTTP.ResponseContext.Dispose*
  commentId: Overload:BackedFramework.Resources.HTTP.ResponseContext.Dispose
  name: Dispose
  nameWithType: ResponseContext.Dispose
  fullName: BackedFramework.Resources.HTTP.ResponseContext.Dispose
